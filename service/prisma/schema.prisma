// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  ACTIVE
  CANCELLED
  EXPIRED
}

enum Frequency {
  DAILY
  BIWEEKLY
  WEEKLY
  BIMONTHLY
  MONTHLY
  QUARTERLY
  YEARLY
}

model Session {
  id        String   @id @default(uuid())
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id          String        @id @default(uuid())
  firstName   String        @map("first_name")
  lastName    String        @map("last_name")
  email       String        @unique
  password    String
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")
  Recurring   Recurring[]
  Transaction Transaction[]

  @@map(name: "user")
}

model Category {
  id        String      @id @default(uuid())
  name      String      @unique
  Recurring Recurring[]

  @@map(name: "category")
}

model Subscription {
  id        String      @id @default(uuid())
  status    Status
  startDate DateTime    @map("start_date")
  endDate   DateTime?   @map("end_date")
  Recurring Recurring[]

  @@map(name: "subscription")
}

model Transaction {
  id          String     @id @default(uuid())
  isRecurring Boolean?   @map("is_recurring")
  name        String
  amount      Float
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")
  isDeleted   Boolean?   @map("is_deleted")
  deletedAt   DateTime?  @map("deleted_at")
  userId      String     @map("user_id")
  User        User       @relation(fields: [userId], references: [id])
  recurringId String?    @map("recurring_id")
  Recurring   Recurring? @relation(fields: [recurringId], references: [id])
}

model Recurring {
  id             String        @id @default(uuid())
  name           String
  priceHistory   Json
  variableAmount Boolean?      @default(false) @map("variable_amount")
  userId         String        @map("user_id")
  frequency      Frequency
  createdAt      DateTime      @default(now()) @map("created_at")
  updatedAt      DateTime      @updatedAt @map("updated_at")
  isDeleted      Boolean?      @map("is_deleted")
  deletedAt      DateTime?     @map("deleted_at")
  User           User          @relation(fields: [userId], references: [id])
  Category       Category      @relation(fields: [categoryId], references: [id])
  categoryId     String        @map("category_id")
  Transaction    Transaction[]
  Subscription   Subscription? @relation(fields: [subscriptionId], references: [id])
  subscriptionId String?

  @@map(name: "recurring")
}
